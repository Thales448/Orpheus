/**
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: v1.33.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { V1AWSElasticBlockStoreVolumeSource } from '@kubernetes/client-node/dist/gen/models/V1AWSElasticBlockStoreVolumeSource
import { V1AzureDiskVolumeSource } from '@kubernetes/client-node/dist/gen/models/V1AzureDiskVolumeSource
import { V1AzureFilePersistentVolumeSource } from '@kubernetes/client-node/dist/gen/models/V1AzureFilePersistentVolumeSource
import { V1CSIPersistentVolumeSource } from '@kubernetes/client-node/dist/gen/models/V1CSIPersistentVolumeSource
import { V1CephFSPersistentVolumeSource } from '@kubernetes/client-node/dist/gen/models/V1CephFSPersistentVolumeSource
import { V1CinderPersistentVolumeSource } from '@kubernetes/client-node/dist/gen/models/V1CinderPersistentVolumeSource
import { V1FCVolumeSource } from '@kubernetes/client-node/dist/gen/models/V1FCVolumeSource
import { V1FlexPersistentVolumeSource } from '@kubernetes/client-node/dist/gen/models/V1FlexPersistentVolumeSource
import { V1FlockerVolumeSource } from '@kubernetes/client-node/dist/gen/models/V1FlockerVolumeSource
import { V1GCEPersistentDiskVolumeSource } from '@kubernetes/client-node/dist/gen/models/V1GCEPersistentDiskVolumeSource
import { V1GlusterfsPersistentVolumeSource } from '@kubernetes/client-node/dist/gen/models/V1GlusterfsPersistentVolumeSource
import { V1HostPathVolumeSource } from '@kubernetes/client-node/dist/gen/models/V1HostPathVolumeSource
import { V1ISCSIPersistentVolumeSource } from '@kubernetes/client-node/dist/gen/models/V1ISCSIPersistentVolumeSource
import { V1LocalVolumeSource } from '@kubernetes/client-node/dist/gen/models/V1LocalVolumeSource
import { V1NFSVolumeSource } from '@kubernetes/client-node/dist/gen/models/V1NFSVolumeSource
import { V1ObjectReference } from '@kubernetes/client-node/dist/gen/models/V1ObjectReference
import { V1PhotonPersistentDiskVolumeSource } from '@kubernetes/client-node/dist/gen/models/V1PhotonPersistentDiskVolumeSource
import { V1PortworxVolumeSource } from '@kubernetes/client-node/dist/gen/models/V1PortworxVolumeSource
import { V1QuobyteVolumeSource } from '@kubernetes/client-node/dist/gen/models/V1QuobyteVolumeSource
import { V1RBDPersistentVolumeSource } from '@kubernetes/client-node/dist/gen/models/V1RBDPersistentVolumeSource
import { V1ScaleIOPersistentVolumeSource } from '@kubernetes/client-node/dist/gen/models/V1ScaleIOPersistentVolumeSource
import { V1StorageOSPersistentVolumeSource } from '@kubernetes/client-node/dist/gen/models/V1StorageOSPersistentVolumeSource
import { V1VolumeNodeAffinity } from '@kubernetes/client-node/dist/gen/models/V1VolumeNodeAffinity
import { V1VsphereVirtualDiskVolumeSource } from '@kubernetes/client-node/dist/gen/models/V1VsphereVirtualDiskVolumeSource
/**
* PersistentVolumeSpec is the specification of a persistent volume.
*/
export declare class V1PersistentVolumeSpec {
    /**
    * accessModes contains all ways the volume can be mounted. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes
    */
    'accessModes'?: Array<string>;
    'awsElasticBlockStore'?: V1AWSElasticBlockStoreVolumeSource;
    'azureDisk'?: V1AzureDiskVolumeSource;
    'azureFile'?: V1AzureFilePersistentVolumeSource;
    /**
    * capacity is the description of the persistent volume\'s resources and capacity. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#capacity
    */
    'capacity'?: {
        [key: string]: string;
    };
    'cephfs'?: V1CephFSPersistentVolumeSource;
    'cinder'?: V1CinderPersistentVolumeSource;
    'claimRef'?: V1ObjectReference;
    'csi'?: V1CSIPersistentVolumeSource;
    'fc'?: V1FCVolumeSource;
    'flexVolume'?: V1FlexPersistentVolumeSource;
    'flocker'?: V1FlockerVolumeSource;
    'gcePersistentDisk'?: V1GCEPersistentDiskVolumeSource;
    'glusterfs'?: V1GlusterfsPersistentVolumeSource;
    'hostPath'?: V1HostPathVolumeSource;
    'iscsi'?: V1ISCSIPersistentVolumeSource;
    'local'?: V1LocalVolumeSource;
    /**
    * mountOptions is the list of mount options, e.g. [\"ro\", \"soft\"]. Not validated - mount will simply fail if one is invalid. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes/#mount-options
    */
    'mountOptions'?: Array<string>;
    'nfs'?: V1NFSVolumeSource;
    'nodeAffinity'?: V1VolumeNodeAffinity;
    /**
    * persistentVolumeReclaimPolicy defines what happens to a persistent volume when released from its claim. Valid options are Retain (default for manually created PersistentVolumes), Delete (default for dynamically provisioned PersistentVolumes), and Recycle (deprecated). Recycle must be supported by the volume plugin underlying this PersistentVolume. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#reclaiming
    */
    'persistentVolumeReclaimPolicy'?: string;
    'photonPersistentDisk'?: V1PhotonPersistentDiskVolumeSource;
    'portworxVolume'?: V1PortworxVolumeSource;
    'quobyte'?: V1QuobyteVolumeSource;
    'rbd'?: V1RBDPersistentVolumeSource;
    'scaleIO'?: V1ScaleIOPersistentVolumeSource;
    /**
    * storageClassName is the name of StorageClass to which this persistent volume belongs. Empty value means that this volume does not belong to any StorageClass.
    */
    'storageClassName'?: string;
    'storageos'?: V1StorageOSPersistentVolumeSource;
    /**
    * Name of VolumeAttributesClass to which this persistent volume belongs. Empty value is not allowed. When this field is not set, it indicates that this volume does not belong to any VolumeAttributesClass. This field is mutable and can be changed by the CSI driver after a volume has been updated successfully to a new class. For an unbound PersistentVolume, the volumeAttributesClassName will be matched with unbound PersistentVolumeClaims during the binding process. This is a beta field and requires enabling VolumeAttributesClass feature (off by default).
    */
    'volumeAttributesClassName'?: string;
    /**
    * volumeMode defines if a volume is intended to be used with a formatted filesystem or to remain in raw block state. Value of Filesystem is implied when not included in spec.
    */
    'volumeMode'?: string;
    'vsphereVolume'?: V1VsphereVirtualDiskVolumeSource;
    static readonly discriminator: string | undefined;
    static readonly mapping: {
        [index: string]: string;
    } | undefined;
    static readonly attributeTypeMap: Array<{
        name: string;
        baseName: string;
        type: string;
        format: string;
    }>;
    static getAttributeTypeMap(): {
        name: string;
        baseName: string;
        type: string;
        format: string;
    }[];
    constructor();
}
